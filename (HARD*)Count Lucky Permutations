// User function Template for C++

class Solution {
  public:
    long long int luckyPermutations(int n, int m, vector<int> arr,vector<vector<int>> edges) {
        vector< vector<int> > graph(n,vector<int> (n,0));
        
        //MakeGRaph
        for(int i=0;i<m;i++){
            graph[edges[i][1] - 1][edges[i][0] - 1] = 1;
            graph[edges[i][0] - 1][edges[i][1] - 1] = 1;
        }
        
        //MAKE DP ARRAY
        vector<vector<long long>> dp (n, vector<long long> (1<<n,0));
        
        for(int i=0;i<n;i++){
            dp[i][1<<i] = 1;
        }
        
        for(int bitmaskCol = 1 ; bitmaskCol < (1<<n) ; bitmaskCol++){
            for(int i=0;i<n;i++){
                if(1 & ( bitmaskCol >> i )){
                    for(int j=0;j<n;j++){
                        if(i!=j && arr[i]!=arr[j] && (1 & (bitmaskCol>>j)) && (graph[arr[i]-1][arr[j]-1])){
                            dp[i][bitmaskCol] += dp[j][bitmaskCol^(1<<i)];
                            
                        }
                    }
                }
            }
        }
        
        // for(int i=0;i<n;i++){
        //     for(int j=0;j<(1<<n);j++){
        //         cout<<dp[i][j]<<" ";
        //     }
        //     cout<<endl;
        // }
        
        long long ans = 0;
        for(int i=0;i<n;i++){
            ans+= dp[i][(1<<n)-1];
        }
        return ans;
        // Code here
    }
};
