//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


class Array
{
public:
    template <class T>
    static void input(vector<T> &A,int n)
    {
        for (int i = 0; i < n; i++)
        {
            scanf("%d ",&A[i]);
        }
    }

    template <class T>
    static void print(vector<T> &A)
    {
        for (int i = 0; i < A.size(); i++)
        {
            cout << A[i] << " ";
        }
        cout << endl;
    }
};


// } Driver Code Ends
class Solution {
  public:
    int solve(int N, int K, vector<int> &arr) {
        
        int sum = 0;
        for(auto itr : arr) sum += itr;
        
        vector<int> div;
        for(int i=1;i*i<=sum;i++){
            if(sum%i==0) div.push_back(i);
        }
        
        vector<int> prefixSum(N,0);
        prefixSum[0] = arr[0];
        for(int i=1;i<N;i++) prefixSum[i] = prefixSum[i-1] + arr[i];
        
        int ans = 1;
        for(auto d : div){
            int part = 0;
            int part2 = 0;
            int d2 = sum / d;
            for(auto num : prefixSum){
                if(num % d == 0){
                    part++;
                }
                if(num % d2 == 0) part2++;
            }
            if(part>=K){
                ans = max(ans,d);
            }
            if(part2>=K){
                ans = max(ans,d2);
            }
        }
        return ans;
        // code here
    }
};


//{ Driver Code Starts.

int main(){
    int t;
    scanf("%d ",&t);
    while(t--){
        
        int N;
        scanf("%d",&N);
        
        
        int K;
        scanf("%d",&K);
        
        
        vector<int> arr(N);
        Array::input(arr,N);
        
        Solution obj;
        int res = obj.solve(N, K, arr);
        
        cout<<res<<endl;
        
    }
}

// } Driver Code Ends
